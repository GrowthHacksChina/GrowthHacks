# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)
puts "這個種子檔會自動建立一個admin帳號, 並且創建 10 個jobs,10个issues,10个posts"

create_account = User.create([email: 'example@gmail.com', password: '123456', password_confirmation: '123456', is_admin: 'true'])
puts "Admin account created."

create_jobs = for i in 1..10 do
  Job.create!([title: "Job no.#{i}", description: "這是用種子建立的第 #{i} 個工作", wage_upper_bound: rand(50..99)*100, wage_lower_bound: rand(10..49)*100,
               contact_email: "example@gmail.com", work_address: "china"])
end
puts "10 jobs created."

create_issues = for i in 1..10 do
  Issue.create!([title: "Issue no.#{i}"])
  create_posts = for j in 1..10 do
    Post.create!([title: "Post no.#{j} with Issue no.#{i}", content: "content no.#{j}", issue_id: i,author: "content no.#{j}"])
  end
end
puts "10 issues created."

create_posts = Post.create([
  title:"何谓growth hacker？（一）特征",
  content:"最近一段时间，growth hacker在硅谷开始兴起。何谓growth hacker？其实际应用又在哪里？本系列文章将为您揭秘。
Growth hacker在技术界已经留下了自己的印记。网上到处都是招聘这一职位的广告。处在不同发展阶段的公司对于这些发展专家的需求跟对用户体验和计算机科学的人才一样求贤若渴。这股人才需求的趋势在硅谷愈演愈烈。
但是，很多公司对此只是为了追赶时髦和受不断商品化的驱使，却很少能意识到破解发展密码的真正意义，只是简单地认为这些人能够为公司“增长销量”和“获得用户”。跟大多数技术专才所不同的是，growth hacker并非一组技能或知识的组合。Clarity的创始人Dan Martell说：“破解发展更多的是一种理念体系而非工具组合。”这是经过历练总结出来的一套必然的行为准则。Growth hacker拥有共同的态度，相同的内部调查流程以及一致的心态，令其在技术人员和营销人员中独树一帜。对数据、创造性和好奇心的理念体系使得growth hacker能够将发展客户群的基数做到百万级。
痴迷数据
Growth hacker对跟踪和推进指标的热情近乎痴迷。要是没有指标或者数据，growth hacker会感到浑身不舒坦。对数据的强烈偏好促使growth hacker抛弃虚有其名的指标，转向可以做成生意和实现业务突破的指标。数据和指标是growth hacker发现发展道路至高无上的科学手段。growth hacker对指标的看法不像报告机制那么严格，也不把数据当做钻研的方式，而是通过理论化和测试过程把它们当成做出更好产品的灵感之源。这种科学的发展方法被Everlane的联合创始人

Jesse Farmer 称为是工程化分销。“最好的growth hacker对于发展和分销采取严格的经验主义的做法。” Jesse说。Growth hacker关注的是通过反复推进特定指标的办法来实现增长。这样的指标可以是注册转化率，可以是维里系数（viral coefficient）。数据可以启发新产品及可行动的市场细分。
有创造力
第一批growth hacker之一，Bebo的联合创始人Michael Birch说，“破解发展是科学与艺术的结合。”尽管有数据和发展指标的驱动，growth hacker一样也是富于创造力的问题解决者。Growth hacker充满活力、思维敏锐，总能想出获得和维系挽留客户的新方式。Growth hacker绝不会止步于数据，而是会拓展出新的未知领域来找到增长办法。Tagged 的联合创始人Greg Tseng说，growth hacker的数据和创造力是齐头并进的，“你的左右脑是不是都一样出色？如果你只有分析的头脑，那么就会明白自己的想法有多糟糕！”
创意和分析的结合是growth hacker的典型特征。“创意人才按照直觉设计出对用户最好的东西，分析人才则提供有深刻见地的洞察分析。真正的独角兽是那些能够完成从设计、开发、衡量到分析的全过程的事情，并能够根据结合了用户直觉与深度分析的结果不断迭代改进的人。”这是HomeRun 联合创始人Matt Humphrey的看法。Growth hacker做的事情跨越多个职能部门和学科，从UI/UX到指标决策，不一而足。创意和分析的结合使得growth hacker对产品拥有融合的、系统性的视角。
还很好奇
Growth hacker对访客何以变为用户并被吸引感到痴迷，着魔于产品为何会一败涂地。对于令人困扰的用户，growth hacker习惯去探究，找出推进和调整指标的新办法。

MediaSpike 创始人，社交游戏先驱者之一的

Jesse Farmer 说，“破解发展发出一条微妙的讯息，‘今天你为我干了什么？’身为growth hacker必须永不止步。Facebook已经有十多亿用户，但仍有一个增长团队。” Growth hacker总是保持好奇，对于学习永不知足。他们深入审视用户行为，在行为经济领域不断封疆拓土。Jesse Farmer说，“好的growth hacker对互联网有好奇心，对其运作方式有着深刻理解。好的growth hacker会去读《轻推》(Nudge)和《怪诞行为学》(Predictably Irrational)这两本书，发掘可能的破解发展之路。”这种好奇心能够令其突破表象，把握产品和用户体验之精髓。Growth hacker对于有没有实现增长并不是很关心，而是渴望去理解用户的心态和产品流，以便让这种办法不断重复。Hot or Not 的联合创始人、Perceptual Networks 的创始人Jim Young 说，Growth hacker不过是“可以看成是人的极客罢了。”
Growth hacker是一种稀有物种，需要把数据、创造力及好奇心这三种不太可能凑到一起的东西混搭到一起。由于这仍然是一个相当崭新的领域，有人也许会质疑说现在硅谷可能仅有几百号growth hacker。虽然现在数量少，但这个职业没有天花板，机会的大门向所有人敞开。“我希望大家在阅读本文时，会希望学习我们的方法并愿意成为一名growth hacker，达到一呼百应的效果。” Refer.ly 的床和创始人、

Twillio 的前growth hacker

Danielle Morrill说。
大多数growth hacker说自己是通过创办一个零营销预算的公司来学会相关的经验技能的。下一篇文章将探索破解发展的实践应用，看看营销是如何重塑自己的。",
  issue_id: 1,author: "admin"])
puts "供ios开发测试的第一篇文章"

create_posts = Post.create([title:"看GrowthHack数据驱动用户增长",
  content:"8月30日，由七牛公司主办的主题为“数据重构未来”的“七牛·数据时代峰会”在上海国际时尚中心继续举行。Growth Hacker，前Facebook工程师覃超以《从Facebook GrowthHack看数据驱动用户增长》为主题发表了演讲，以下为现场实录：
  覃超：大家好！非常感谢举办方邀请我来做这个讲座。感谢大家这么早在这里来听我们技术人讲的这些内容。我叫覃超，右下角是我的头像，可能大家更熟悉我的头像。有人说我是覃超，但是这个是一个多音字。

            我今天的主题是Growth Hacking，同时会把一些实在的经验来帮助你们公司进行业务的增长以及用户数据的增长。

            现在我是做一个手机顾问，一个技术合伙人，所以你们有项目，也可以来聘请我。我在Facebook工作，后半年，两年的时间，我有实战经验，也没写过任何东西，但是我在这里两年做产品，我对第一手的经验分享，其实之前的话，觉得这部分信息比较敏感，这一次是公开演讲，为大家来揭开FacebookGrowthHack的演讲。一路现在到将近现在15亿活跃用户的一个规模。今天的议程开始会是一个简单的自我介绍，对不熟悉的我的人。接下来解决简介，来自我之前很喜欢的一本书，指价值投资，用的这个名字，接下来就是具体的方式，也就是实战的经验。第四点我在Facebook发布一个功能，到底我一步一步是怎么做的，整个公司产品发布流程是怎么样，是非常实战的一个事情。第五点，对于创业公司来说要注意的东西。很多时候是有害处的地方，对于创业公司要小心，对你们有破坏性。

            M：现在比较简单，我在上海同济大学读书，所以对上海比较熟悉，接下来在北京学习，当年2007年谷歌还是一个时代，然后在金融读计算机，后来在Facebook待了四年，做了很多产品，还有一些没有公开的项目。Facebook都在下面，用了大量增长黑客的办法，实现这个产品的增长。

            我2010年进入Facebook用户是1.5亿，我离开2014年4年的时候增加了3倍，达到了14亿人。每天活跃用户从2.5亿达到了8亿，所有这些还不包括中国，移动用户从之前的20%到了现在的70%，最近上周五的时候，还发了自己个人消息，上周一的时候，一天登陆Facebook人已经达到了10亿人这是一个里程碑的事情。

            所以接下来我所讲的，FacebookGrowthHack是如何达到这样一个成绩。

            Growth大家都知道增长，Hack相当于整个序列里面。HaCK所强调是少说废话去写，写了之后即使很粗糙，迅速发布出来给用户，看到用户的反应是怎样的，后台有大量的数据进行统计，进行对比甚至进行发布，通过所有这些东西，来决定这个产品到底是上还是不上。另外后续是如何迭代的，所以快速搞定持续迭代很重要，也就是借用一句话，一开始不做大家大产品，试出用户的反映，然后上市。另外是技术驱动，数据为王。右边是先做出来更加重要。

            这是一个很大的Team，2007年开始成立，占了整个公司人数20%，老大就是叫Olivan是一个西班牙人，整个Growth老大不汇报给之类的人，由此可见，公司对于Growth的重视以及对于数据驱动的重视，下面有好几个大的，会看到他的演讲，IR8n指的是国际化，怎么本地化是一个很大的挑战，公司没有人懂所有人的语言，对中国可能稍微好一点，国内市场。

            实战的经验，你们公司如果要用Growth办法的话，应该怎么做，怎么可以用好方法实现公司的增长。第一步比较基础的一步，毫无疑问你先要收集数据，而且有效把数据展示出来，这一点我觉得大家都很明白。经常会有一些指标，活跃用户、月活用户，日活用户，同时用户平均待的日常，你们如果用第三方服务平台，基本都有，另外还有一个很重要，用户的留存，过了一个月、过了两个月你的用户还剩多少，用户留存是一个很重要的指标。第三就是对于每个公司可能都不一样，你们在创办公司建立这么一个数据表的时候，你自己要定义好对你们公司来说，重要的是什么。这里是Facebook自己觉得很重要，并不一定适合于所有公司，L67，指的是过去西7天登陆6天用户的数量，因为日活，没有考虑多少用户，而下面进行更加反映用户的忠诚度。日活大家能够理解，很多用户变来变去，而L67指的是用户的忠诚度。而后面表示用户的参与度，接下来还有一些，所有展示了的时长以及给公司带来的收入的变化，对于还有用户每天发的平均数目，以及耗电量。所以这些东西对于每个公司不一样，所以具体还要再看。

            我再进入Facebook第一天，培训的时候。里面有公司各种数据，当时我进去的时候，有一点震撼，第一对数据很重要，很多搞的很规整放在那里展示，过去一年、过去三个月，日本是怎样的印度是作为的，这是主要的主题。有一个平台你把它建起来，如果有任何错误，对公司修改灾难性打击，整个方向可能就错了，最后数据统计得不对。

            接下来第二步，建立这个之后，第一方面作为监控用，第二方面，要做事情，从这些繁琐的数据中，得到有用的信息，第一步要做的事，首先你分析之前要设定你物理是什么。我讲的比较理论话，过了之后就有具体的案例分析。接下来根据这个主的核心数据进行比对，从这些比对里面你要找出最重要的一点，也就是这一点，可以来决定这两组成员不同的行为，指的是你要提出一个假设根据数据得到的结论，拥有一个假设的理论。在产品上马上进行反映，来验证你的理论。这个新的功能点进行发布给用户之后，你在后台看用户各种数据来验证理论是否证据，整个过程大概是这样的，还是比较抽象。

            我们来看一个具体的例子，它指的是一个功能Facebook在网页上最右上角一直有这个功能，也有类似专门的液面给你推荐好友。现在用人人网、微博也好，这个功能一般都有，这个是Growth团队弄出来的。整个故事是这样的，当时还是2007年到2008年的时候，发现一个很有趣的问题，所有社交社区都有这么一个问题，豆瓣也好，一群用户非常活跃，我们定义为参照组，另外一批用户非常不活跃，基本不用我的产品，或者经常不登录时候，我们要对于不活跃的用户，做一件事情。这个时候，这其实是中国的工程师做的，在我们里面，把这两类登录词放在定义处来列出来，把他们抽出来之后，比对他们的各项数据，各项数据都进行比对，从中试图找出最重要的，里面有很多细节，不是公开。对比的话，他发现出最重要的一点，就是你的好友数，它推出一个假设好友数的多少，决定了这个用户的活跃度，这就是为什么，做出了这么一个部门，一开始这个部门只是尝试性放在那里，然后推到1%的用户进行测试，慢慢发现好友越来越多，接下来活跃度越来越高，于是这个功能就一直放。两个特点，第一个不是产品团队，这个功能好，然后提出假设，舆论再过来的，第二个事情的话，这个部推出来并不是推出所有人，再看最后数据，假设是正确的，最后得到通过。另外还有一个类似的，他们在坐的进行第二次比对的话，发现了第二个假设，如果个人信息齐全的话，活跃度就越高。我想我和后面的团队类似的事情，他们也做过相应的测试，最后发现，在上面活跃的话，基本上答了两到三个问题以后，得到了两位数在以后几个月，所以它会尽量邀请你回答问题，早期的回答问题，都是运营团队人进行做的。

            这就是现在的陌陌，昨天试了以下会有你资料的完善程度，91%，这个功能也是Growth对比各种数据得到的假设，最终通过打分，你的完成度不够提示用户。

            前面都做好了以后，接下来还要做的用户拉新，以及用户的留存。拉新对于创业公司来说已经是轻车熟路，O2O之后，各种渠道上面打广告，微博头条，或者是应用包，都可以进行推广，另外还有一个力推，补贴之类的东西。更加重要是留存，这个地方没有什么太多理论研究，留存的本质你必须是好产品，这个情况，事实就是帮不了，你可以用一些召回的机制补偿它，但是你的本质必须是好产品，你听了我的讲座之后，其他都忘记了，第一点比较重要你记住好产品是留存的标准，而用户地留存永远是王道在留存的时候你发现一些至关重要的点，好友数，以及你的完成程度，你就要找到那个，越过这道鸿沟，这是一本书，可以推荐给大家。

            这是两个产品，红色是A，B是另外一个，30指的是天数，过了30天数有多少用户还留存在这里，蓝色是产品，而我们的下一轮你有好留存的会更加喜欢，会越来越多。

            关于留存还有一个经常用的，召回机制之前说过，这里提醒一点，大家要谨慎使用。召回机制，一般来说发邮件或者你错过什么东西，你有比较好看的消息在这里面。这种模型Facebook之前也发明了，纵轴是用户来到我这个平台，成为我这个用户的稀缺数，这个漏斗的面积，表示发这个消息的多少，他刚来到这个平台还不熟悉，我们要多互动，这个时候我们发东西多一点，随着停留的时间越来越长，比如说它已经活跃了7周8周之后就到最下面，我们就认为相对稳定或者非常稳定，我们就不再发任何消息骚扰他。如果他某一段时间回到这上面，我们重新放在相应的层级，给他这么多的数量。

            另外一个，这里很多公司都在用，比如说中国做的更好是在朋友圈里面发红包。这个不罗嗦了，这是推荐一本书，这是关于市场和销售在互联网环境下应该怎样做，也很适合，跟它的思想很相似，所以这里推荐给大家。

            第四点也是最重要的一点，很多GrowthHack经常被人忽略一点，就是灰度发布，这里用实际的案例，微信做的好，我自己做了一个功能放在微信上，然后我是怎样一步一步按照Facebook发布起来。第一个我们做了什么东西去申请，最后来看，Facebook是一个产品驱动，可以亲自盯每个重要的部门。另外一个这有一个我会预测我发布这个语音消息之后对用户数据的影响，比如说多了还是少了，用户每天发的数字是多了还是少了，你开始要预测，你发布这一个功能不会对用户数据产生灾难的影响，当然最好是要促进。

            第三个就是写，写这个代码之后发布出去，发布出去给所有人，已经在所有人手机里面，我们有一个开关，每隔一个小时，去拿到所有的信息。开始的时候全部都是关的，也就是说，他们的里面已经有我们语音消息代码，当然如果你们用微信的话，你们发现很多时候也是这样，一个部门过了几天之后才慢慢出来。接下来慢慢开放，开放1%、2%、5%，开放1%的用户，后来开放给5%的用户，后来开放20%的用户，1%、5%相当于实验数，另外在没有开放这个功能所有用户里面再挑相应的比例，1%或者5%，作为我们的参照组，对比两组数据，用户活跃度到底是增加还是下降，这个的影响，比如说对于它来说它每天发消息的数目，以及打开延时之类，有时候我们还会看这个对耗电量的影响。

            所有东西都不错的话，最后这个也会开放给用户。在下版甚至下下版才在我们的里面把上一版的代码清除掉。所以在2、3个月，我们会有多个版本的代码共生，用户只看到一套，但是代码都在里面，后来慢慢清洗掉。

            再举一个更加明显的例子，这是我们Facebook主页平时用的不多，现在主页就是这个样子，这个主页和2010年一样，5年我们没有任何变化，但是我们内部做了各种各样的尝试，但是全部失败了。举一个例子，这个版本可能有些人看过，可能有些人没有看过，2013年的版本，这个版本当时特别牛的，是好基友，之前他们是寝室的大学，也是很厉害，每天4、5点到公司，做了这么一个页面，这是老页面，以及现在用的，这是新页面，他们所说的事情，想到为什么要重新设计，很明显，他可以做几个观点，第一信息没有那么复杂，这个你看不清楚，这个东西的话，很明显很大的照片，所有的信息被精简化，同时人物的头像被加大，照片更加突出，因为人们现在越来越繁忙，QQ讲座30分钟都是煎熬的情况下更好给大家看图片这种形式，另外各种信息得到了微整，左边就是进行了简化，它的观点是这样。

            另外还有一个更加说服的地方，它的左边和Facebook进行了统一，如果你们用过Facebook左边很类似。所以相当于统一起来，用户对这个导航栏更加熟悉，不管用网页或者是移动端，也有统一的体验。

            后来的故事，我这里不写出来，可能比较敏感。后来的故事就是说，这个版本其实是开放给它，用了几月都还不错，各种数据没有问题，后来再把这个发给3%、5%的用户，后来我们发现有漏洞在我们这里面，数据完全是错的，在用户那边是对的，发给5%的用户，发现我们的显示时间往下掉，导致公司的收入，那个月的收入开始下滑。慢慢的话，就把这个比例升到12%用户的时候，公司一个月收入降到10%到20%，这个时候就把这个叫停了，整个页面，重新改到这个版本，老的版本，比较反复的版本，但是我们的确这样做的。直到现在，对这个版本进行了小改。

            回顾这个地方，主要是两个特点，第一个我们之前花了将近一年的时间，很长的一个团队带做这么一个事情，最后数据证明，你的结果是不好的。比如说更加的简洁风，图片没用，现在不是讲道理的时代，就是看数据说话。第二个承认自己的错误，有错误的话，返回，一切看数据说话，而不是减轻影响。

            但是，我大家别忘了中国还有一个公司，人人网，人人网跟Facebook是很像，看得很快。即使是发了12%的用户很多人也看到，他们就开始做了，做出这样一个版本和这个比，左边一条差不多，这种类似，中边是一条，左边各种信息，右边广告，现在进人人网也是，现在人人网的活跃度大家都知道的。这就回到两句话，我们最后在博客里面讲的两句话，我给大家读，你做创业公司即使像Facebook还是类似于在深海，在远洋进行创新，我们不知道什么地方有礁。“什么东西结果是好的，我们就去做，我们是数据的奴隶，或者我们要敬畏数据”。

            这是一个简单的总结，事实说话，防止独裁造成的产品或者功能灾难，第三通过1%、2%、5%的发布，减少压力。第四Facebook走得比较快，过了一个月之后，这个地方有一个很大的漏洞，我发给私人的东西很多人有权限看的话，通过服务器，我们的控制就是最后一道防线。

            最后对于创业公司，很多的时候，是一种阶段，看你在什么阶段。要明确一点，开始的时候其实是让你的产品迭代，变慢，但是会走更稳走得更加脚踏实地。对于后面几个方法，更加适合于稳定的用户，比如像这些用户，用户量还比较大。进行竞争的时候，这个时候要注意，开发一个并不是老大，你要进行数据的验证。第二点，老大要改变自己的观念。同时下面技术人可以给他看这些数据的话，来更好劝说。第三点，对创业公司来说，并没有这么多的工程师去做，这些的话，都要有解决方案，用己有的商业服务。这一块是之前讲的决定Facebook生死，Facebook和人人网开始进行竞争的时候，可以去做这一件事情，也是一个信息创造的动作，由谷歌之前所创办的公司，整个技术、整个解决方案我觉得和Facebook雷同的系统，相似的。它形成了一些简单的参照，比如说这是对于布局的参照，这个布局应该做成什么样子。给出结果的一个比对，这是群体之间的比对，没有一个确切的比对，结果会给一个大致的范围。Facebook几乎相似，它从最下面往上看，给你说一个趋势还有一个区间。

            总结来看的话，所有这些东西，要建立数据的收集、采集，你的新用户拉新以及留存，留存是王道。第三个数据驱动，以数据为王，数据为参照来决定产品的方向，最后想说的就是敬畏数据，从而能够驾驭数据，谢谢大家",
  issue_id: 1,author: "admin"])
puts "供ios开发测试的第二篇文章"
